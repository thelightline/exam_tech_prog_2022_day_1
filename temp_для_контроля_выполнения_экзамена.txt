Dockerfile:
	+В качестве исходного образа взять	ubuntu.
	+Разместить информацию об авторе		как метку.
	++Установить модуль	gcc.
	++Скопировать файлы проекта в контейнер в заданную папку	MyProj_<Surname>.
	+Скомпилировать проект в файл с именем	myProgram.
	+Запустить c параметром (строка, которая допишется в файл), заданным	при старте контейнера.
	Собрать образ и разместить на DockerHub в открытом доступе.
	Ссылку на образ прикрепить в Git в виде текстового файла. А так же написать команды, которыми можно собрать образ из dockerfile и запустить.

Проект:
	На основе паттерна singleton написать класс MyFile для подключения к файлу, имя которого задается при создании объекта конструктором (если файла с таким именем не существует, то создается новый пустой файл с заданным именем). В классе реализовать методы 
		bool write_to_the_end_of_file(std::string source)//записи данных в конец файла, 
		bool rewrite_file(std::string source)//полной перезаписи файла, 
		std::string read_from_file()//чтения из файла. 
	Для демонстрации работы класса написать консольное приложение без Qt и создать любой файл.
	
Git
	Работа с репозиторием осуществляется посредством консольных команд (PowerShell, GitBash, Terminal, etc). Принтсткрины экрана можно загрузить в свою ветку путем перетаскивания.
	Результат работы можно заливать толко в свою ветку.
	В процессе экзамена в вашу ветку могут быть (и будут) внесены изменения.